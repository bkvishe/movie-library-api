# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: teamlemontea
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: movie-library-api
# "service" is the name of this project. This will also be added to your AWS resource names.
service: movie-library-api

stages:
  default:
    params:
      tableName: "movies-table-${sls:stage}"

provider:
  name: aws
  runtime: nodejs20.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [MoviesTable, Arn]
  environment:
    MOVIES_TABLE: ${param:tableName}
    X_API_KEY: ${env:X_API_KEY}
  httpApi:
    cors:
      allowedOrigins:
        - http://localhost:4200

functions:
  api:
    handler: src/app.handler
    events:
      - httpApi: "*"
    environment:
      X_API_KEY: ${env:X_API_KEY}

resources:
  Resources:
    MoviesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${param:tableName}
        AttributeDefinitions:
          - AttributeName: movieId
            AttributeType: S
        KeySchema:
          - AttributeName: movieId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
